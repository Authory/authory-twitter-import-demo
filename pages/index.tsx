import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import 'bootstrap/dist/css/bootstrap.css'
import { useState } from 'react'
import qs from "query-string";


const POLL_INTERVAL = 100;

export default function Home() {

  const [email, setEmail] = useState('')
  const [handle, setHandle] = useState('')
  const [isSubmitted, setIsSubmitted] = useState(false)
  const [showSpinner, setShowSpinner] = useState(false)

  const signUpHandler = async (twitterData: any) => {
    const resp = await fetch("https://api-development.authory.com/twitter-import/signup", {
      method: "post",
      headers: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(twitterData)
    })

    if(resp.status === 200) {
      setIsSubmitted(true)
    } else {
      console.error(resp.status, resp.statusText, await resp.text())
    }
  }

  // TODO: To be deleted.
  const submitEmail = async () => {

    let url = ''

    if(handle.startsWith("@")) {
      url = `https://twitter.com/${handle.substring(1)}`
    } else if(!url.startsWith("https://") || !url.startsWith("http://")) {
      url = `https://twitter.com/${handle}`
    } else {
      url = handle
    }

    // TODO: Error handling & param validation
    const resp = await fetch("https://api-development.authory.com/twitter-import/signup", {
      method: "post",
      headers: {
        'Accept': 'application/json, text/plain, */*',
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: email,
        twitterUrl: url
        // TODO: Add recaptcha v3?
      })
    })

    if(resp.status === 200) {
      setIsSubmitted(true)
    } else {
      console.error(resp.status, resp.statusText, await resp.text())
    }
  }

  const startOauth = async () => {
    // Open popup first, while we are still in click context.
    const popup = window.open("about:blank")!;

    let res;

    const resp = await fetch("https://api-development.authory.com/twitter-auth-link", {
      method: "get",
      headers: {
        'Accept': 'application/json, text/plain, */*',
      }
    })

    if(resp.status === 200) {
      res = await resp.json()
    } else {
      console.error(resp.status, resp.statusText, await resp.text())
      return
    }


    popup.location.href = res.redirectUrl;
    const requestTokenSecret = res.twitterRequestTokenSecret;

    const pollTimer = window.setInterval(async () => {
        try {
            const url = popup.document.URL; // Fails if cross-domain, so will only proceed if it's been redirected to /signup/twitter-callback

            if (url.indexOf("/signup/twitter-callback") !== -1) {
                window.clearInterval(pollTimer);
                const { oauth_token, oauth_verifier } = qs.parse(url.split("?")[1]);

                if (typeof oauth_token === "string" && typeof oauth_verifier === "string") {
                    setShowSpinner(true);
                    popup.close();

                    try {
                        await signUpHandler({
                            twitterRequestToken: oauth_token,
                            twitterRequestVerifier: oauth_verifier,
                            twitterRequestTokenSecret: requestTokenSecret,
                        });
                    } catch {
                        setShowSpinner(false);
                    }

                    setShowSpinner(false);
                }
            }
        } catch (error) {
            // This one we cant log or stop, we need to wait for the user to be redirected.
        }
    }, POLL_INTERVAL);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Back up your Twitter!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Back up your Twitter!
        </h1>

        <p className={styles.description}>

        </p>

        <div className={styles.collumn}>
          <form className={styles.collumn}>
            <input type="button" className="form-control btn btn-primary" value="Authorize with Twitter" onClick={startOauth}></input>
          </form>
        </div>

        { isSubmitted && <p className={styles.description}><b>Thank you, you will receive an email in roughly 30 minutes with a link to your backup.</b></p>}
        
        <p className={styles.description}>

        </p>
        <p className={styles.description}>
          This will fully backup your Twitter
        </p>

        <p className={styles.paragraph}>
          Including media, into a searchable archive that <a href="#">looks like this</a>. The archive will be hosted by us and you can share it as you see fit.<br /><br />
          Additionally, you can download a copy of your data at any time.
        </p>
        <p className={styles.description}>
          Why?
        </p>
        <p className={styles.paragraph}>
        We built this for the same reason we built <a href="https://authory.com">Authory</a> - we belive in free speach and fully owning your own data. You can read more on our <a href="https://authory.com/ownership">commitment to ownership here</a>.
        </p>
        <p className={styles.description}>
          Is this free?
        </p>
        <p className={styles.paragraph}>
          This service is free for one month, you will be able to download all data at any time. You can extend this period to up to a full year by inviting your friends via the invite link we will send you via e-mail.<br />
          After the free time is over, we will contact you and offer to turn your backed up twitter feed into a full <a href="https://authory.com" target="_blank">Authory</a> account. You will not be charged and you don't need to take any action if you don not want that.
        </p>

        <p className={styles.description}>
          Feature Requests/Questions?
        </p>
        <p className={styles.paragraph}>
          Feel free to create an issue <a href="https://github.com/Authory/authory-twitter-import-demo">here</a>, or reach out to us <a href="mailto:hello@authory.com">via email</a>.
        </p>
      </main>

      <footer className={styles.footer}>
          Built with love by&nbsp;<a href="https//authory.com" target="_blank">Authory</a>&nbsp;-&nbsp;<a href="https://authory.com/imprint" target="_blank">Imprint</a>
      </footer>
    </div>
  )
}
